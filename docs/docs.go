// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/tasks/": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create task",
                "parameters": [
                    {
                        "description": "Create Params",
                        "name": "CreateParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_timohahaa_transcoder_internal_composer_modules_task.CreateForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task Model",
                        "schema": {
                            "$ref": "#/definitions/github_com_timohahaa_transcoder_internal_composer_modules_task.Task"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/render.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/tasks/{task_id}/": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task Model",
                        "schema": {
                            "$ref": "#/definitions/github_com_timohahaa_transcoder_internal_composer_modules_task.Task"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/render.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/render.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/tasks/{task_id}/cancel/": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Cancel task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/render.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/tasks/{task_id}/progress/": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task progress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task progress",
                        "schema": {
                            "$ref": "#/definitions/internal_composer_handlers_http_v1_tasks.taskProgress"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/render.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_timohahaa_transcoder_internal_composer_modules_task.CreateForm": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "number"
                },
                "file_size": {
                    "type": "integer"
                },
                "settings": {
                    "$ref": "#/definitions/github_com_timohahaa_transcoder_internal_composer_modules_task.Settings"
                },
                "source": {
                    "$ref": "#/definitions/github_com_timohahaa_transcoder_internal_composer_modules_task.Source"
                }
            }
        },
        "github_com_timohahaa_transcoder_internal_composer_modules_task.Settings": {
            "type": "object",
            "properties": {
                "encrypt": {
                    "type": "boolean"
                }
            }
        },
        "github_com_timohahaa_transcoder_internal_composer_modules_task.Source": {
            "type": "object",
            "properties": {
                "fs": {
                    "$ref": "#/definitions/github_com_timohahaa_transcoder_internal_composer_modules_task.SourceFS"
                },
                "http": {
                    "$ref": "#/definitions/github_com_timohahaa_transcoder_internal_composer_modules_task.SourceHTTP"
                }
            }
        },
        "github_com_timohahaa_transcoder_internal_composer_modules_task.SourceFS": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                }
            }
        },
        "github_com_timohahaa_transcoder_internal_composer_modules_task.SourceHTTP": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "github_com_timohahaa_transcoder_internal_composer_modules_task.Task": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "number"
                },
                "encoder": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "routing": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/github_com_timohahaa_transcoder_internal_composer_modules_task.Settings"
                },
                "source": {
                    "$ref": "#/definitions/github_com_timohahaa_transcoder_internal_composer_modules_task.Source"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_composer_handlers_http_v1_tasks.taskProgress": {
            "type": "object",
            "properties": {
                "progress": {
                    "type": "integer"
                }
            }
        },
        "render.HTTPError": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "invalid_params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/validate.InvalidParamErr"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "validate.InvalidParamErr": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "param_name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
